buildscript {
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.github.gmazzo:gradle-buildconfig-plugin:1.5.0"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.gmazzo.buildconfig'


group groupName
version versionName

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.6"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.6"
}

def getProjectPropertyOrDefault(String propertyName, Object defaultValue){
    return project.hasProperty(propertyName) ? project.getProperties()[propertyName] : defaultValue
}


buildConfig {
    println(project.group)
    packageName(project.group)
    buildConfigField("String",
            "GOLOSIO_KEY",
            "\"${getProjectPropertyOrDefault("GOLOSIO_KEY", "")}\"")
    buildConfigField("String",
            "CREATE_KEY",
            "\"${getProjectPropertyOrDefault("CREATE_KEY", "")}\"")
    buildConfigField("String",
            "GLS_CREATOR_KEY",
            "\"${getProjectPropertyOrDefault("GLS_CREATOR_KEY", "")}\"")
    buildConfigField("String",
            "PHONE_REG_KEY",
            "\"${getProjectPropertyOrDefault("PHONE_REG_KEY", "")}\"")

    buildConfigField("String",
            "BLOCKCHAIN_DEV",
            "\"${getProjectPropertyOrDefault("BLOCKCHAIN_DEV", "")}\"")
   
    buildConfigField("String",
            "SERVICES_DEV",
            "\"${getProjectPropertyOrDefault("SERVICES_DEV", "")}\"")
    
}

dependencies {
    kapt project(path: ':eos-abi-writer-preprocessor', configuration: 'default')
    
    api project(path: ":eos-core", configuration: 'default')
    api project(path: ":abi-implementation", configuration: 'default')
    api project(path: ":shared-model", configuration: 'default')
    api project(path: ":eos-http-rpc", configuration: 'default')
    api project(path: ":eos-chain-actions", configuration: 'default')
    api project(path: ":eos-abi-writer", configuration: 'default')

    api "com.squareup.okhttp3:logging-interceptor:$loggingIntrceptorVersion"
    implementation "com.squareup.okhttp3:okhttp:$okttpVersion"
    implementation "com.squareup.moshi:moshi-adapters:$moshiAdapterVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiCodegenVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiKotlinVersion"
    implementation("org.bitcoinj:bitcoinj-core:$bitcoinJVersion") {
        exclude group: "com.lambdaworks", module: "scrypt"
    }
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    

    testImplementation 'junit:junit:4.12'
    testImplementation "com.squareup.moshi:moshi-kotlin:$moshiKotlinVersion"
    testImplementation "com.squareup.okhttp3:okhttp:$okttpVersion"
}

apply from: '../publish.gradle'
